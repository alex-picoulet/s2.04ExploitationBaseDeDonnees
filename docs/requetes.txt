1. SELECT COUNT(Visites.Id_visit) FROM Visites
JOIN Localisations on Visites.Location_city = Localisations.Id
WHERE Localisations.Region4 = "France";

(Espagne - Autre région / France / Autre pays / Comunidad de Madrid )

1.1	SELECT COUNT(Visites.Id_visit),Localisations.Region4
FROM Visites
JOIN Localisations on Visites.Location_city = Localisations.Id
GROUP BY Localisations.Region4;




4. SELECT Localisations.Region4, AVG(nb_actions) AS nbAct
FROM (
    SELECT Visites.Location_city, COUNT(DISTINCT ActionsVisites.Id_visit) AS nb_actions
    FROM Visites
    JOIN ActionsVisites ON Visites.Id_visit = ActionsVisites.Id_visit
    JOIN Localisations ON Visites.Location_city = Localisations.Id
    GROUP BY Visites.Location_city
) AS visit_actions
JOIN Localisations ON visit_actions.Location_city = Localisations.Id
GROUP BY Localisations.Region4;

Dans cette requête, nous avons utilisé la fonction d'agrégation COUNT(DISTINCT ActionsVisites.Id_action) pour compter le nombre de visites distinctes
 pour chaque ville et nous avons groupé les résultats par ville. Ensuite, nous avons rejoint la sous-requête avec la table Localisations pour 
obtenir le nom du pays correspondant à chaque ville, puis nous avons groupé les résultats par pays en utilisant la fonction d'agrégation AVG() 
pour calculer la moyenne du nombre d'actions par visite pour chaque pays.

    SELECT AVG(nb_actions) AS nbAct
    FROM (
        SELECT Visites.Location_city, COUNT(DISTINCT ActionsVisites.Id_visit) AS nb_actions
        FROM Visites
        JOIN ActionsVisites ON Visites.Id_visit = ActionsVisites.Id_visit
        JOIN Localisations ON Visites.Location_city = Localisations.Id
        WHERE Localisations.Region4 = 'France'
        GROUP BY Visites.Location_city
    ) AS visit_actions




3. SELECT Actions.action, COUNT(*)  AS NbActions, Pages.Type_page, Localisations.Region4
FROM Actions 
JOIN Pages on Actions.idpage = Pages.Id_page
JOIN ActionsVisites on Actions.idaction = ActionsVisites.Id_action
JOIN Visites on ActionsVisites.Id_visit = Visites.Id_visit
JOIN Localisations on Visites.Location_city = Localisations.Id
WHERE Localisations.Region4 = 'France'
GROUP BY Actions.Action, Pages.Type_page
ORDER BY COUNT(*) DESC
LIMIT 3;

SELECT Actions.action, Pages.Type_page, Localisations.Region4
FROM Actions 
JOIN Pages on Actions.idpage = Pages.Id_page
JOIN ActionsVisites on Actions.idaction = ActionsVisites.Id_action
JOIN Visites on ActionsVisites.Id_visit = Visites.Id_visit
JOIN Localisations on Visites.Location_city = Localisations.Id
WHERE Localisations.Region4 = 'France'
GROUP BY Actions.Action, Pages.Type_page,  Localisations.Region4
ORDER BY COUNT(*) DESC
LIMIT 3;




SELECT t.Region4, t.Type_page, t.count
FROM (
  SELECT Region4, Type_page, count,
         CASE
           WHEN @prevRegion = Region4 THEN @rownum := @rownum + 1
           ELSE @rownum := 1
         END AS row_num,
         @prevRegion := Region4
  FROM (
    SELECT Localisations.Region4,Actions.action, Pages.Type_page, COUNT(*) AS count
    FROM Actions
    JOIN Pages ON Actions.idpage = Pages.Id_page
    JOIN ActionsVisites ON Actions.idaction = ActionsVisites.Id_action
    JOIN Visites ON ActionsVisites.Id_visit = Visites.Id_visit
    JOIN Localisations ON Visites.Location_city = Localisations.Id
    GROUP BY Localisations.Region4, Pages.Type_page,Actions.action
    ORDER BY Localisations.Region4, COUNT(*) DESC
  ) AS subquery, (SELECT @rownum := 0, @prevRegion := '') AS vars
) AS t
WHERE t.row_num <= 2
ORDER BY t.Region4, t.count DESC;